package protocbuf;

option java_package = "protocbuf";
option java_outer_classname = "MgxBidResp";


message MgxBidResponse {
// BidResponse 结构版本,当前为 1 
required int32 version = 1;
// 广告请求的唯一 ID
required string bid_guid = 2;
message AdSlot {
// 在页面上广告位的序列 id,Video 和 mobile 默认为 1 
required int32 id = 1;
// 当前广告位在 Ad Exchange 中唯一的 Id 
required int32 megax_aid = 2;
// 买方对该广告位的购买价格(人民币:分/千次展现) //在固定交易时只要购买价格>=协议价格,即以协议价格成交 
required int64 max_cpm_micros = 3;
// 参与程序化购买的买方在 Ad Exchange 中的唯一 ID 
required string buyer_id = 4;
//广告主在买方平台中的唯一 id(用于广告主审核) 
required string advertiser_id = 5;

required int32 creative_format = 6;

required string creative_content = 7;

required int32 creative_height = 8;
// 素材宽度
required int32 creative_width = 9;

optional uint32 duration = 15;
// 创意在 DSP 中的唯一 ID,用于数据对比、创意审核以及素材托管 
optional string creative_id= 10;
// 广告点击目标地址,素材使用代码和 VAST 方式时不需要
//素材方式为 9:HTML5 Inline Document 时目标地址直接放在 HTML5 代码中 
optional string click_through_url = 11;
// 预留 PV 监测,素材使用代码和 VAST 方式时不需要 
repeated string impression_tracking= 12;
// 预留点击监测,素材使用代码和 VAST 方式时不需要 
repeated string click_tracking= 13;
// 自定义数据(会返回给 bidresult) 
optional string extend_data = 14;
//DSP 货币出价
optional float bidfloor = 16; 
}
repeated AdSlot adslot = 3;
message AdSlot_Union {
// adslot 的序列 id 组合,用于联动广告的售卖方式
repeated int32 adslot_index_ids = 1;
// DSP 对该广告位的出价价格(人民币:分/千次展现) 
required int64 max_cpm_price = 2;
//参与竞价的 DSP(buyer)在 TradingOS 中的唯一 ID,由 Ad Exchange 固定分配
required string buyer_id = 3; 
}
optional AdSlot_Union adslot_union = 4;
}



